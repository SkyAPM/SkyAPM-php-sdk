/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.apache.skywalking.apm.network.servicemesh.v3";
option go_package = "skywalking/network/servicemesh/v3";

import "common/Common.proto";

service ServiceMeshMetricService {
    rpc collect(stream ServiceMeshMetric) returns (MeshProbeDownstream) {
    }
}

message ServiceMeshMetric {
    int64 startTime = 1;
    int64 endTime = 2;
    string sourceServiceName = 3;
    string sourceServiceInstance = 4;
    string destServiceName = 5;
    string destServiceInstance = 6;
    string endpoint = 7;
    int32 latency = 8;
    int32 responseCode = 9;
    bool status = 10;
    Protocol protocol = 11;
    DetectPoint detectPoint = 12;
}

enum Protocol {
    HTTP = 0;
    gRPC = 1;
}

message MeshProbeDownstream {
}
