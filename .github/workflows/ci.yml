name: CI

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-version: ['7.0', '7.1', '7.2', '7.3', '7.4', '8.0']
        skywalking-version: ['8.3.0-es6', '8.2.0-es6', '8.1.0-es6', '8.0.1-es6', '8.0.0-es6']
    name: PHP ${{ matrix.php-version }} Test on SW ${{ matrix.skywalking-version }}
    services:
      skywalking:
        image: apache/skywalking-oap-server:${{ matrix.skywalking-version }}
        ports:
          - 11800:11800
          - 12800:12800
      mysql:
        image: mysql:5
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: "skywalking"
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout GRPC
        uses: actions/checkout@v2
        with:
          ref: v1.31.x
          repository: grpc/grpc
          path: grpc
          submodules: true

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: curl, json, redis, pdo_mysql
          tools: php-config, phpize, composer

      - name: Install library
        run: |
          sudo apt-get update
          sudo apt-get install -y curl libcurl4-openssl-dev nginx
          sudo apt-get install -y build-essential autoconf libtool pkg-config cmake
          sudo apt-get install -y autoconf automake libtool curl make g++ unzip libboost-all-dev
          if ! [ -e /usr/bin/php-fpm ]; then
            sudo apt-get install -y php${{ matrix.php-version }}-fpm
            sudo cp /usr/sbin/php-fpm${{ matrix.php-version }} /usr/bin/php-fpm
          fi
          cd e2e
          composer install
          cd ..

      - name: Build GRPC
        run: |
          cd /home/runner/work/SkyAPM-php-sdk/SkyAPM-php-sdk/grpc/third_party/protobuf
          ./autogen.sh && ./configure
          make -j$(nproc) && make -j$(nproc) check && sudo make install && sudo make clean && sudo ldconfig
          cd /home/runner/work/SkyAPM-php-sdk/SkyAPM-php-sdk/grpc
          mkdir -p cmake/build
          cd cmake/build
          cmake ../.. -DBUILD_SHARED_LIBS=ON -DgRPC_INSTALL=ON
          make -j$(nproc) && sudo make install && make clean && sudo ldconfig
          cd /home/runner/work/SkyAPM-php-sdk/SkyAPM-php-sdk
          sudo rm -fr /home/runner/work/SkyAPM-php-sdk/SkyAPM-php-sdk/grpc

      - name: Build SkyWalking-PHP
        run: |
          cd /home/runner/work/SkyAPM-php-sdk/SkyAPM-php-sdk
          phpize
          ./configure
          make -j$(nproc)
          sudo make install
          sudo make clean

      - name: Start FPM and Nginx
        run: |
          sudo cp e2e/99-skywalking.ini $(php -i | grep additional | sed -e "s|.*=> s*||")
          sudo cp e2e/99-skywalking.ini $(php-fpm -i | grep additional | sed -e "s|.*=> s*||")
          sudo cp e2e/nginx.conf /etc/nginx/conf.d/
          sudo sed -i "s/VERSION/${{ matrix.php-version }}/g" /etc/nginx/conf.d/nginx.conf
          sudo cp -r e2e/vendor /var/www/html/
          sudo cp -r e2e/tests /var/www/html/
          sudo cp e2e/tests.php /var/www/html/
          sudo cp e2e/index.php /var/www/html/
          sudo systemctl restart php${{ matrix.php-version }}-fpm
          sudo systemctl restart nginx


      - name: E2E tests
        run: |
          cd e2e
          php -dskywalking.enable=0 e2e.php
          sudo cat /tmp/skywalking-php.log

  publish:
    needs: [build]
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-version: ['7.0', '7.1', '7.2', '7.3', '7.4', '8.0']
    name: Publish PHP ${{ matrix.php-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Publish Dokcer image
        if: github.event_name == 'push'
        uses: elgohr/Publish-Docker-Github-Action@2.13
        with:
          name: skyapm/skywalking-php-${{ matrix.php-version }}-fpm-alpine
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tag_names: true
          dockerfile: docker/Dockerfile.${{ matrix.php-version }}
