// Code generated by protoc-gen-go. DO NOT EDIT.
// source: language-agent-v2/JVMMetric.proto

package v2

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
	v2 "github.com/SkyAPM/SkyAPM-php-sdk/reporter/network/common/v2"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type JVMMetricCollectionV2 struct {
	Metrics              []*JVMMetricV2 `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	ServiceInstanceId    int32          `protobuf:"varint,2,opt,name=serviceInstanceId,proto3" json:"serviceInstanceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *JVMMetricCollectionV2) Reset()         { *m = JVMMetricCollectionV2{} }
func (m *JVMMetricCollectionV2) String() string { return proto.CompactTextString(m) }
func (*JVMMetricCollectionV2) ProtoMessage()    {}
func (*JVMMetricCollectionV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5bd38fe036677f3, []int{0}
}

func (m *JVMMetricCollectionV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JVMMetricCollectionV2.Unmarshal(m, b)
}
func (m *JVMMetricCollectionV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JVMMetricCollectionV2.Marshal(b, m, deterministic)
}
func (m *JVMMetricCollectionV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JVMMetricCollectionV2.Merge(m, src)
}
func (m *JVMMetricCollectionV2) XXX_Size() int {
	return xxx_messageInfo_JVMMetricCollectionV2.Size(m)
}
func (m *JVMMetricCollectionV2) XXX_DiscardUnknown() {
	xxx_messageInfo_JVMMetricCollectionV2.DiscardUnknown(m)
}

var xxx_messageInfo_JVMMetricCollectionV2 proto.InternalMessageInfo

func (m *JVMMetricCollectionV2) GetMetrics() []*JVMMetricV2 {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *JVMMetricCollectionV2) GetServiceInstanceId() int32 {
	if m != nil {
		return m.ServiceInstanceId
	}
	return 0
}

func init() {
	proto.RegisterType((*JVMMetricCollectionV2)(nil), "JVMMetricCollectionV2")
}

func init() { proto.RegisterFile("language-agent-v2/JVMMetric.proto", fileDescriptor_a5bd38fe036677f3) }

var fileDescriptor_a5bd38fe036677f3 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0x80, 0xed, 0x44, 0x07, 0x99, 0x07, 0xad, 0x38, 0x46, 0x4f, 0x73, 0x88, 0xec, 0xe0, 0x12,
	0xc9, 0xfe, 0x81, 0x3b, 0xad, 0x50, 0x19, 0x1d, 0x54, 0xf0, 0x16, 0xb3, 0x47, 0x2d, 0x6d, 0xf2,
	0x4a, 0x1a, 0x3b, 0xe6, 0x4f, 0xf2, 0x57, 0xca, 0x9a, 0xb6, 0x1e, 0xdc, 0x29, 0xf0, 0xbd, 0x2f,
	0x2f, 0xe1, 0x23, 0xf7, 0x85, 0xd0, 0xe9, 0x97, 0x48, 0x61, 0x21, 0x52, 0xd0, 0x76, 0x51, 0x73,
	0x16, 0x26, 0x51, 0x04, 0xd6, 0x64, 0x92, 0x96, 0x06, 0x2d, 0x06, 0xb7, 0x12, 0x95, 0x42, 0xcd,
	0xdc, 0xd1, 0xc2, 0xeb, 0x16, 0x86, 0x49, 0xe4, 0xc8, 0x4c, 0x91, 0xbb, 0xfe, 0xe6, 0x0a, 0x8b,
	0x02, 0xa4, 0xcd, 0x50, 0x27, 0xdc, 0x7f, 0x24, 0x43, 0xd5, 0xd0, 0x6a, 0xe2, 0x4d, 0xcf, 0xe7,
	0x23, 0x7e, 0x45, 0x7b, 0x31, 0xe1, 0x71, 0x37, 0xf4, 0x9f, 0xc8, 0x4d, 0x05, 0xa6, 0xce, 0x24,
	0xac, 0x75, 0x65, 0x85, 0x96, 0xb0, 0xde, 0x4d, 0x06, 0x53, 0x6f, 0x7e, 0x11, 0xff, 0x1f, 0xf0,
	0x90, 0x8c, 0xfb, 0x2d, 0x31, 0x94, 0x68, 0xec, 0xd6, 0x39, 0xfe, 0x33, 0x19, 0x4a, 0xf7, 0xbe,
	0x3f, 0xa6, 0x27, 0xbf, 0x14, 0x8c, 0xe8, 0x0a, 0x95, 0x12, 0x7a, 0x57, 0x25, 0x7c, 0x76, 0xf6,
	0xf2, 0x4d, 0x96, 0x68, 0x52, 0x2a, 0x4a, 0x21, 0x3f, 0x81, 0x56, 0xf9, 0x61, 0x2f, 0x8a, 0x3c,
	0xd3, 0x47, 0xa2, 0xa8, 0x06, 0xbb, 0x47, 0x93, 0xd3, 0x2e, 0x14, 0x6d, 0x42, 0xd1, 0x9a, 0x6f,
	0xbc, 0xf7, 0x87, 0x3f, 0x97, 0xb5, 0x1e, 0xeb, 0x3c, 0xd6, 0x78, 0xac, 0xe6, 0x3f, 0x83, 0x60,
	0x9b, 0x1f, 0xde, 0xda, 0x95, 0xaf, 0x4e, 0xdb, 0x1c, 0x9b, 0x49, 0x2c, 0x3e, 0x2e, 0x9b, 0x7a,
	0xcb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x3f, 0x0c, 0xc7, 0x89, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JVMMetricReportServiceClient is the client API for JVMMetricReportService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JVMMetricReportServiceClient interface {
	Collect(ctx context.Context, in *JVMMetricCollectionV2, opts ...grpc.CallOption) (*v2.CommandsV2, error)
}

type jVMMetricReportServiceClient struct {
	cc *grpc.ClientConn
}

func NewJVMMetricReportServiceClient(cc *grpc.ClientConn) JVMMetricReportServiceClient {
	return &jVMMetricReportServiceClient{cc}
}

func (c *jVMMetricReportServiceClient) Collect(ctx context.Context, in *JVMMetricCollectionV2, opts ...grpc.CallOption) (*v2.CommandsV2, error) {
	out := new(v2.CommandsV2)
	err := c.cc.Invoke(ctx, "/JVMMetricReportService/collect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JVMMetricReportServiceServer is the server API for JVMMetricReportService service.
type JVMMetricReportServiceServer interface {
	Collect(context.Context, *JVMMetricCollectionV2) (*v2.CommandsV2, error)
}

// UnimplementedJVMMetricReportServiceServer can be embedded to have forward compatible implementations.
type UnimplementedJVMMetricReportServiceServer struct {
}

func (*UnimplementedJVMMetricReportServiceServer) Collect(ctx context.Context, req *JVMMetricCollectionV2) (*v2.CommandsV2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Collect not implemented")
}

func RegisterJVMMetricReportServiceServer(s *grpc.Server, srv JVMMetricReportServiceServer) {
	s.RegisterService(&_JVMMetricReportService_serviceDesc, srv)
}

func _JVMMetricReportService_Collect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JVMMetricCollectionV2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JVMMetricReportServiceServer).Collect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/JVMMetricReportService/Collect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JVMMetricReportServiceServer).Collect(ctx, req.(*JVMMetricCollectionV2))
	}
	return interceptor(ctx, in, info, handler)
}

var _JVMMetricReportService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "JVMMetricReportService",
	HandlerType: (*JVMMetricReportServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "collect",
			Handler:    _JVMMetricReportService_Collect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "language-agent-v2/JVMMetric.proto",
}
